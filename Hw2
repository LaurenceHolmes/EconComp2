# import dataset 
install.packages('haven')
install.packages("ivreg", dependencies = TRUE)
library(ivreg)
library(haven)
donnees_airline <- read_dta("donnees_airline.dta")

# Description of Variables 
# s0 - Rest of the market share
# s1 - Market share of firm 1 
# s2 - Market share of firm 2 
# p1 - Price of firm 1 
# p2 - price of firm 2 
# escale1 - whether or not firm 1 had a stop 
# escale2 - whether or not firm 2 had a stop 
# dist - distance 






####################################################################################

# Summary Statistics 

donnees_airline$s0 <- 1 - donnees_airline$s1 - donnees_airline$s2

summary(donnees_airline$s0)
sd(donnees_airline$s0)
summary(donnees_airline$s1)
sd(donnees_airline$s1)
summary(donnees_airline$s2)
sd(donnees_airline$s2)
summary(donnees_airline$p1)
sd(donnees_airline$p1)
summary(donnees_airline$p2)
sd(donnees_airline$p2)

# Correlation between Escale and Distance 

cor(donnees_airline$escale1, donnees_airline$dist)
cor(donnees_airline$escale2, donnees_airline$dist)

# price regressions 

model1 <- lm(p1~escale1+escale2+dist, data = donnees_airline)
summary(model1)
model2 <- lm(p2~escale1+escale2+dist, data = donnees_airline)
summary(model2)


####################################################################################
####################################################################################

# Part 2 

donnees_airline$lns1 <- log(donnees_airline$s1/donnees_airline$s0)
donnees_airline$lns2 <- log(donnees_airline$s2/donnees_airline$s0)

# price regression using natural log of s1 over natural log of s0
model3 <- lm(lns1~p1+escale1+dist, data = donnees_airline)
summary(model3)

model4 <- lm(lns2~p2+escale2+dist, data = donnees_airline)
summary(model4)

# price regression using natural log of s1 over natural log of s0

model3 <- lm(lns1~p1+escale1+dist, data = donnees_airline)
summary(model3)

model4 <- lm(lns2~p2+escale2+dist, data = donnees_airline)
summary(model4)

# price regressions using instrumental variable 

model5 <- ivreg(lns1~p1+escale1 | dist+escale1, data = donnees_airline)
summary(model5)

model6 <- ivreg(lns2~p2+escale2 | dist+escale2, data = donnees_airline)
summary(model6)

# Change Dataset
Airdf <- data.frame(donnees_airline)
Airdf$s0 <- 1 - Airdf$s1 - Airdf$s2

# Change Dataset

firm1 <- data.frame(Airdf$ligne, Airdf$s1, Airdf$s0, Airdf$p1, Airdf$escale1, Airdf$dist)
firm2 <- data.frame(Airdf$ligne, Airdf$s2, Airdf$s0, Airdf$p2, Airdf$escale2, Airdf$dist)
firm1$lns <- log(Airdf$s1/Airdf$s0)
firm2$lns <- log(Airdf$s2/Airdf$s0)
firm1

firms1 <- rep(1, 500)
firms2 <- rep(2, 500)
firm1$Firm <- firms1 
firm2$Firm <- firms2  
names(firm1) <- c('Line', 's', 's0', 'p', 'Stops', 'dist', 'lns', 'Firm')
names(firm2) <- c('Line', 's', 's0', 'p', 'Stops', 'dist', 'lns', 'Firm')

AirlineData <- rbind(firm1,firm2)


model100 <- lm(lns~p+Stops+dist, data = AirlineData)
summary(model100)

model7 <- ivreg(lns~p+Stops | dist+Stops, data = AirlineData)
summary(model7)

alpha <- 31.409098
beta <- 0.131122
mu <- -2.020999
####################

AirlineData$c <- AirlineData$p - (1/(0.131*(1-AirlineData$s)))
sum(AirlineData$p)/1000
sum(AirlineData$c)/1000
186.9179/200.7861

#############
library(dplyr)
AirDf2 <- AirlineData %>% arrange(Line)
AirDf2

AirDf2$xihat <- AirDf2$lns - alpha + beta * AirDf2$p - mu * AirDf2$Stops
AirDf2$eta <- alpha + mu * AirDf2$Stops + AirDf2$xihat


###########################################################################################################################

Need to solve the two equations eq1/eq2 for the unknown parameters p1/p2 , using the variables: beta (from the IV regression); eta (in the for loop); and cost (from the data)
Tried bare different things not sure if you have used anything to solve in R before, help would be grand.


install.packages('pracma')
library(pracma)

#non linear equations: 


F <- function(x) {
  x[1] <- p1
  x[2] <- p2
  eq1 <- 1 - beta * (1-(exp(eta1 - beta * p1)/(1+ exp(eta1 - beta * p1)+ exp(eta2 - beta * p2))))*(p1-c1) + beta * exp(eta2 - beta * p2)/ (1+exp(eta1 - beta * p1) + exp(eta2 - beta * p2))
  eq2 <- 1 - beta * (1-(exp(eta2 - beta * p2)/(1+ exp(eta1 - beta * p1)+ exp(eta2 - beta * p2))))*(p2-c2) + beta * exp(eta1 - beta * p1)/ (1+exp(eta1 - beta * p1) + exp(eta2 - beta * p2))
  return(c(eq1,eq2))
}
  

#pnew <- c(p1 , p2)  
#  F <- function(pnew) {
#  eq1 <- 1 - beta * (1-(exp(eta1 - beta * p1)/(1+ exp(eta1 - beta * p1)+ exp(eta2 - beta * p2))))*(p1-c1) + beta * exp(eta2 - beta * p2)/ (1+exp(eta1 - beta * p1) + exp(eta2 - beta * p2))
#  eq2 <- 1 - beta * (1-(exp(eta2 - beta * p2)/(1+ exp(eta1 - beta * p1)+ exp(eta2 - beta * p2))))*(p2-c2) + beta * exp(eta1 - beta * p1)/ (1+exp(eta1 - beta * p1) + exp(eta2 - beta * p2))
#  return(c(eq1, eq2))
#}


for (i in seq(1,500,2)) {
  eta1 <- AirDf2$eta[i]
  eta2 <- AirDf2$eta[i+1]
  c1 <- AirDf2$c[i]
  c2 <- AirDf2$c[i+1]
  p1 <- AirDf2$p[i]
  p2 <- AirDf2$p[i+1]
  x <- c(p1 , p2)
  X  <- fsolve(F, x)
}
